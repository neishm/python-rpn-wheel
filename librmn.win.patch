diff --git a/Makefile b/Makefile
index fb4d0fb..83d50dd 100644
--- a/Makefile
+++ b/Makefile
@@ -24,7 +24,7 @@ genlib:
 	./merge_rmnlib_packages $(WORKDIR) $(LIBDIR) $(LIBNAME)_d ; \
 	else \
 	./make_locallib_packages ; \
-	rm -f $(LIBDIR)/$(EC_ARCH)/$(LIBNAME).a ; \
+	rm -f $(LIBDIR)/$(EC_ARCH)/$(LIBNAME)*.a ; \
 	./merge_rmnlib_packages $(WORKDIR) $(LIBDIR) $(LIBNAME) ; \
 	fi
 
diff --git a/base/Makefile b/base/Makefile
index bb26828..a831e83 100644
--- a/base/Makefile
+++ b/base/Makefile
@@ -105,7 +105,7 @@ grgg.o:		grgg.F 	kases.cdk 	pi.cdk
 idxes.o:	idxes.F 	kases.cdk 
 llfxy.o:	llfxy.F 	pi.cdk 
 mxma.o:         mxma.F
-	s.compile -O 1 -defines "=$(DEFINE)" -optf "=$(FFLAGS)" $(SUPP_OPT) $(FTN_SUPP_OPT) -src $<
+mxma.o: OPTIMIZ = 1
 
 mzonxst.o:	mzonxst.F 
 npspin.o:       npspin.F 	kases.cdk 	pi.cdk 
@@ -150,10 +150,10 @@ locallib: gen_ec_arch_dir \
          $(TEMPLIB)(gdadcn.o)         $(TEMPLIB)(gdadgd.o)       $(TEMPLIB)(gdmpgd.o)        $(TEMPLIB)(gdsqrt.o) \
          $(TEMPLIB)(grgg.o)           $(TEMPLIB)(grlcc.o)        $(TEMPLIB)(grll.o)          $(TEMPLIB)(grps.o) \
          $(TEMPLIB)(idatmg.o)         $(TEMPLIB)(idxes.o)        $(TEMPLIB)(igaxg.o)         $(TEMPLIB)(incdat.o) \
-         $(TEMPLIB)(int1d1.o)         $(TEMPLIB)(inzono.o)       $(TEMPLIB)(ipsort.o)        $(TEMPLIB)(isort.o) \
+         $(TEMPLIB)(int1d1.o)         $(TEMPLIB)(ipsort.o)        $(TEMPLIB)(isort.o) \
          $(TEMPLIB)(jdatec.o)         $(TEMPLIB)(jjulien.o)      $(TEMPLIB)(llfxy.o)         $(TEMPLIB)(moduledate.o) \
          $(TEMPLIB)(movlev.o)         $(TEMPLIB)(movlev8.o)      $(TEMPLIB)(mscale.o)        $(TEMPLIB)(mwerms.o) \
-         $(TEMPLIB)(mzonxst.o)        $(TEMPLIB)(npspin.o)       $(TEMPLIB)(ordleg.o)        $(TEMPLIB)(permut.o) \
+         $(TEMPLIB)(npspin.o)       $(TEMPLIB)(ordleg.o)        $(TEMPLIB)(permut.o) \
          $(TEMPLIB)(polagr.o)         $(TEMPLIB)(rossr3.o)       $(TEMPLIB)(s1scor.o)        $(TEMPLIB)(sglo.o) \
          $(TEMPLIB)(sglogg.o)         $(TEMPLIB)(sll.o)          $(TEMPLIB)(sort.o)          $(TEMPLIB)(spd.o) \
          $(TEMPLIB)(splat.o)          $(TEMPLIB)(sps.o)          $(TEMPLIB)(sqadsq.o)        $(TEMPLIB)(valide.o) \
diff --git a/fstd98/Makefile b/fstd98/Makefile
index c55f95f..59c3827 100644
--- a/fstd98/Makefile
+++ b/fstd98/Makefile
@@ -83,7 +83,7 @@ locallib: gen_ec_arch_dir \
          $(TEMPLIB)(burp98.o)   $(TEMPLIB)(fstd98.o)   $(TEMPLIB)(xdf98.o)    $(TEMPLIB)(convip.o) \
          $(TEMPLIB)(fstcvt2.o)  $(TEMPLIB)(c_burp.o)   $(TEMPLIB)(strgr4a.o)  $(TEMPLIB)(r4astrg.o) \
          $(TEMPLIB)(hybref.o)   $(TEMPLIB)(FC_string.o) $(TEMPLIB)(memcpy_8_16.o) \
-         $(TEMPLIB)(memcpy_16_32.o) $(TEMPLIB)(c_fstgrib_helper.o) $(TEMPLIB)(fst_missing.o) \
+         $(TEMPLIB)(memcpy_16_32.o) $(TEMPLIB)(fst_missing.o) \
          $(TEMPLIB)(convert_ip123.o) $(TEMPLIB)(convip_plus.o) $(TEMPLIB)(excdes_new.o)
 
 genlib: $(OBJECTS)
diff --git a/fstd98/fst_missing.c b/fstd98/fst_missing.c
index 047b2b7..a593898 100644
--- a/fstd98/fst_missing.c
+++ b/fstd98/fst_missing.c
@@ -180,10 +180,6 @@
 #include <stdlib.h>
 #include <stdio.h>
 
-#include <dlfcn.h>
-void *DlOpen(const char *filename, int flag);
-void *DlSym(void *handle, const char *symbol);
-
 int msg_level;
 
 #include "qstdir.h"
@@ -256,34 +252,6 @@ int missing_value_used()  /* return 1 if missing value detected, 0 otherwise */
        
        set_plugin_missing_value_flags
 	 */
-	text=getenv("MISSING_VALUE_PLUGINS");
-	if(text != NULL ){
-	  fprintf(stderr,"INFO: opening plugin library '%s'\n",text);
-	  handle = DlOpen(text,RTLD_NOW);
-	  if(handle != NULL){
-		SetMissingValueMapping(1,1,DlSym(handle,"float_decode"),0,0,0);
-		SetMissingValueMapping(1,1,DlSym(handle,"double_decode"),0,0,1);
-		SetMissingValueMapping(1,2,DlSym(handle,"uint_decode"),0,0,0);
-		SetMissingValueMapping(1,2,DlSym(handle,"ubyte_decode"),1,0,0);
-		SetMissingValueMapping(1,2,DlSym(handle,"ushort_decode"),0,1,0);
-		SetMissingValueMapping(1,4,DlSym(handle,"int_decode"),0,0,0);
-		SetMissingValueMapping(1,4,DlSym(handle,"byte_decode"),1,0,0);
-		SetMissingValueMapping(1,4,DlSym(handle,"short_decode"),0,1,0);
-
-		SetMissingValueMapping(2,1,DlSym(handle,"float_encode"),0,0,0);
-		SetMissingValueMapping(2,1,DlSym(handle,"double_encode"),0,0,1);
-		SetMissingValueMapping(2,2,DlSym(handle,"uint_encode"),0,0,0);
-		SetMissingValueMapping(2,2,DlSym(handle,"ubyte_encode"),1,0,0);
-		SetMissingValueMapping(2,2,DlSym(handle,"ushort_encode"),0,1,0);
-		SetMissingValueMapping(2,4,DlSym(handle,"int_encode"),0,0,0);
-		SetMissingValueMapping(2,4,DlSym(handle,"byte_encode"),1,0,0);
-		SetMissingValueMapping(2,4,DlSym(handle,"short_encode"),0,1,0);
-                set_plugin_missing_value_flags = (void(*)()) DlSym(handle,"set_plugin_missing_value_flags");
-	  }
-	  else {
-		fprintf(stderr,"WARNING: plugin library '%s' not found\n",text);
-	  }
-	}
     if(set_plugin_missing_value_flags != NULL ) (*set_plugin_missing_value_flags)(
 	     &float_missing_val,
 	     &int_missing_val,
diff --git a/fstd98/fstd98.c b/fstd98/fstd98.c
index ec832d6..ddce759 100644
--- a/fstd98/fstd98.c
+++ b/fstd98/fstd98.c
@@ -34,7 +34,6 @@
 #include <string.h>
 #include <math.h>
 #include <sys/types.h>
-#include <regex.h>
 
 #define Max_Ipvals 50
 
@@ -701,7 +700,7 @@ int c_fstecr(word *field_in, void * work, int npak,
     if(xdf_short) sizefactor=2 ;
     if(xdf_double | IEEE_64)sizefactor=8 ;
     if(is_missing){    /* put appropriate values into field after allocating it */
-      field= (word *) alloca(ni*nj*nk*sizefactor); /* allocate self deallocating scratch field */
+      field= (word *) malloc(ni*nj*nk*sizefactor); /* allocate self deallocating scratch field */
       if( 0 == EncodeMissingValue(field,field_in,ni*nj*nk,in_datyp,nbits,xdf_byte,xdf_short,xdf_double) ) {
         field=field_in ;
         INFOPRINT fprintf(stderr,"NO missing value, data type %d reset to %d\n",stdf_entry->datyp,datyp);
@@ -946,7 +945,7 @@ fprintf(stderr,"NEW PACK CODE======================================\n");
     sprintf(string,"Write(%d)",iun);
     print_std_parms(stdf_entry,string,prnt_options,0);
   }
-/*  free(buffer);        remplaced by alloca */
+  free(buffer);
   xdf_double = 0;
   xdf_short = 0;
   xdf_byte = 0;
@@ -1813,7 +1812,7 @@ int c_fstluk(word *field, int handle, int *ni, int *nj, int *nk)
     
 /*  printf("Debug+ fstluk lng2 = %d\n",lng2); */
   /* allocate 8 more bytes in case of realingment for 64 bit data */
-  if ((work_field = alloca(8+(lng2+10)*sizeof(word))) == NULL) {
+  if ((work_field = malloc(8+(lng2+10)*sizeof(word))) == NULL) {
     sprintf(errmsg,"memory is full, was trying to allocate %ld bytes",
             lng*sizeof(word));
     return(error_msg("c_fstluk",ERR_MEM_FULL,ERRFATAL));
@@ -2049,7 +2048,7 @@ fprintf(stderr,"NEW UNPACK CODE ======================================\n");
     DecodeMissingValue( field , (*ni)*(*nj)*(*nk) , xdf_datatyp&0x3F,xdf_byte,xdf_short,xdf_double ); /* */
   }
   free(stdf_entry);
-/* free(work_field);        replaced by alloca */
+  free(work_field);
   xdf_double = 0;
   xdf_short = 0;
   xdf_byte = 0;
diff --git a/fstd98/if_fstd98.c b/fstd98/if_fstd98.c
index 5ff34a5..1d73290 100644
--- a/fstd98/if_fstd98.c
+++ b/fstd98/if_fstd98.c
@@ -1700,54 +1700,10 @@ ftnword f77name(ip3_val)(ftnfloat *f_level, ftnword *f_kind)
 
 
 /*splitpoint fst_can_translate_name */
-static char exception_vars[256]="~^[<>!^]";  /* by default ignore names starting with >!^ */
-static int read_done=0;
-static regex_t pattern;
 
 int FstCanTranslateName(char *varname)  /* is this name NOT FOUND in do no translate table */
 {
-  FILE *fileref;
-  static char filename[256];
-  char *FST_NOIP_NAME, *BASENAME;
-  int result, i;
-  regmatch_t match_table;
-
-  if (! read_done) {  /* first call, get do not translate table */
-    read_done=1;
-    FST_NOIP_NAME=getenv("FST_NOIP_NAME");
-    ARMNLIB=getenv("ARMNLIB");
-    BASENAME=ARMNLIB;
-    if(FST_NOIP_NAME)  /* environment variable contains the table */
-    {
-      strncpy( exception_vars , FST_NOIP_NAME , sizeof(exception_vars) );
-      BASENAME=NULL;
-      if(exception_vars[0]=='|') BASENAME=exception_vars+1; /* FST_NOIP_NAME contains a file name */
-    }
-    if(BASENAME){ /* get table from $ARMNLIB/data/exception_vars file if it exists */
-      if(BASENAME==ARMNLIB)
-        snprintf(filename,sizeof(filename),"%s/data/exception_regex_var",ARMNLIB);
-      else
-        snprintf(filename,sizeof(filename),"%s",BASENAME);
-      if ((fileref = fopen(filename,"r")) != NULL) {
-        if(NULL == fgets(exception_vars,sizeof(exception_vars),fileref) ) exception_vars[0]='\0' ;
-        fprintf(stderr,"OPENING exception file: %s\n",filename);
-        fclose(fileref) ;
-      }
-    }
-    if(exception_vars[0]=='~') 
-    {
-      for (i=0 ; exception_vars[i]!='\0' && exception_vars[i]!='\n' ; i++) ; exception_vars[i]='\0';
-      result = regcomp(&pattern,exception_vars+1,REG_EXTENDED|REG_NOSUB);
-      if (msg_level < INFORM) fprintf(stderr,"exception pattern: '%s'\n",exception_vars+1);
-    }
-  }
-  if(exception_vars[0]=='~')  /* this is a regex pattern */
-  {
-    result = regexec(&pattern,varname,(size_t) 0,NULL,0)!=0;  /* name not in pattern, it can be translated */
-  }else{  /* this is a straight list of 4 char tokens */
-    result = strstr(exception_vars,varname)==NULL ; /* name not in list, it can be translated */
-  }
-  return result;
+  return (1 == 1);
 }
 /*splitpoint print_std_parms */
 /***************************************************************************** 
diff --git a/interp/Makefile b/interp/Makefile
index 893c1df..f4d854f 100644
--- a/interp/Makefile
+++ b/interp/Makefile
@@ -1,6 +1,6 @@
 .SUFFIXES :
 
-.SUFFIXES : .ftn90 .c .o .a
+.SUFFIXES : .ftn90 .c .o .a .f90
 
 SHELL = /bin/bash
 
diff --git a/make_locallib_packages b/make_locallib_packages
index 271ed66..bce408e 100755
--- a/make_locallib_packages
+++ b/make_locallib_packages
@@ -1,12 +1,13 @@
 #!/bin/bash
 # set -x
+set -e
 mmake=make
 which gmake >/dev/null  && mmake=gmake
 echo mmake = $mmake
 #workdir=`pwd`
 if [[  ${CRAYOS_VERSION} == "" ]]; then
 echo "================== Normal mode ======="
-for package in base burp98_f cmc_log compresseur fstd98 interp interpv lamineur packers primitives readlx bmf spectral twinbuffer template_utils/gmm template_utils/whiteboard
+for package in base burp98_f compresseur fstd98 interp interpv packers primitives bmf twinbuffer
 do 
   pushd ${package}
   $mmake locallib
diff --git a/merge_rmnlib_packages b/merge_rmnlib_packages
index 424b8b6..fbb566c 100755
--- a/merge_rmnlib_packages
+++ b/merge_rmnlib_packages
@@ -1,12 +1,14 @@
-# set -x
+#!/bin/bash
+set -e
 srcd=`pwd`
 workdir=$1
 libdir=$2
 libname=$3
 cd ${workdir}
-for package in ${srcd}/base ${srcd}/burp98_f ${srcd}/cmc_log ${srcd}/compresseur ${srcd}/fstd98 ${srcd}/interp ${srcd}/interpv ${srcd}/lamineur ${srcd}/packers ${srcd}/primitives ${srcd}/readlx ${srcd}/bmf ${srcd}/spectral ${srcd}/twinbuffer ${srcd}/template_utils/gmm ${srcd}/template_utils/whiteboard
+for package in ${srcd}/base ${srcd}/burp98_f ${srcd}/compresseur ${srcd}/fstd98 ${srcd}/interp ${srcd}/interpv ${srcd}/packers ${srcd}/primitives ${srcd}/bmf ${srcd}/twinbuffer
 do 
   ar x ${package}/${EC_ARCH}/lib_local.a
-  ar rcv ${libdir}/${EC_ARCH}/${libname}.a *.o
+  ar rcv ${libdir}/${EC_ARCH}/${libname}_tmp.a *.o
   rm *.o
 done
+mv ${libdir}/${EC_ARCH}/${libname}_tmp.a ${libdir}/${EC_ARCH}/${libname}.a
diff --git a/primitives/Makefile b/primitives/Makefile
index 67815f3..c8a4e6f 100644
--- a/primitives/Makefile
+++ b/primitives/Makefile
@@ -39,7 +39,7 @@ TARRLS = beta
 default: obj
 
 rmnlib_v:
-	-rm rmnlib_version.f
+	-rm -f rmnlib_version.f
 	./rmnlib_version $(RMNLIB_VERSION)
 
 rmnlib_version.f: rmnlib_v
@@ -151,31 +151,32 @@ gen_ec_arch_dir:
 #Creer le repertoire $EC_ARCH 
 	mkdir -p ./$(EC_ARCH)
 
-locallib: gen_ec_arch_dir \
-         $(TEMPLIB)(c_baseio.o)        $(TEMPLIB)(c_ccard.o)        $(TEMPLIB)(constnt.o)         $(TEMPLIB)(dmms.o) \
-         $(TEMPLIB)(exdb.o)            $(TEMPLIB)(fread32.o) \
-         $(TEMPLIB)(getenvc.o)         $(TEMPLIB)(ieeepak.o)        $(TEMPLIB)(iopdatm.o) \
-         $(TEMPLIB)(loc_sub.o)         $(TEMPLIB)(mgilib2.o)         $(TEMPLIB)(nice19.o) \
-         $(TEMPLIB)(peek.o)            $(TEMPLIB)(poke.o)           $(TEMPLIB)(qqexit.o)          $(TEMPLIB)(qqqmima.o) \
-         $(TEMPLIB)(read_direct.o)     $(TEMPLIB)(resetenv.o)       $(TEMPLIB)(rmnlib_version.o)  $(TEMPLIB)(rmtcall.o) \
-         $(TEMPLIB)(second.o)          $(TEMPLIB)(set_run_dir.o)    $(TEMPLIB)(stkmem.o) \
-         $(TEMPLIB)(sx_timing_stubs.o) $(TEMPLIB)(tracebck.o)       $(TEMPLIB)(up2low.o)          $(TEMPLIB)(vmm.o) \
-         $(TEMPLIB)(wkoffit.o)         $(TEMPLIB)(f_baseio.o)       $(TEMPLIB)(qqqcall.o)         $(TEMPLIB)(qqqr8sz.o)\
-         $(TEMPLIB)(ccard.o)           $(TEMPLIB)(qvmcks.o)         $(TEMPLIB)(rah2char.o)        $(TEMPLIB)(fmain2cmain.o)\
-         $(TEMPLIB)(calc_crc.o)        $(TEMPLIB)(ibm32_ieee.o)     $(TEMPLIB)(second2.o)         $(TEMPLIB)(status_file.o)\
-         $(TEMPLIB)(stkmem2.o)         $(TEMPLIB)(prog_filename.o)  $(TEMPLIB)(rename_c.o)        $(TEMPLIB)(micro_sleep.o)\
-         $(TEMPLIB)(remove_c.o)        $(TEMPLIB)(gossip_sock.o)    $(TEMPLIB)(gossip_timeout.o)  $(TEMPLIB)(gnthread.o)\
-         $(TEMPLIB)(f90_threads.o)     $(TEMPLIB)(c_env_var_cracker.o) $(TEMPLIB)(get_max_rss.o)  $(TEMPLIB)(resident_time.o)\
-         $(TEMPLIB)(appl_var.o)        $(TEMPLIB)(get_ccard_arg.o)  $(TEMPLIB)(ccard_arg_m.o)     $(TEMPLIB)(crc32.o)\
-         $(TEMPLIB)(f_gettimeofday.o)  $(TEMPLIB)(f_bit_slicer.o)   $(TEMPLIB)(gossip_thread.o)   $(TEMPLIB)(flush_stdout.o)\
-         $(TEMPLIB)(array_file.o)      $(TEMPLIB)(logical_smt_cpus.o)  $(TEMPLIB)(pointers_and_addresses.o)\
-         $(TEMPLIB)(mkdir_c.o)         $(TEMPLIB)(non_preempt_clock.o) $(TEMPLIB)(client_timeout.o) $(TEMPLIB)(vpow_ibm.o)\
-         $(TEMPLIB)(ftn2c_helper_c.o)  $(TEMPLIB)(clib_interface.o) $(TEMPLIB)(ftn2c_helper_f.o)\
-         $(TEMPLIB)(arc4.o)            $(TEMPLIB)(md5.o)            $(TEMPLIB)(f_logical2int.o)\
-         $(TEMPLIB)(fool_optimizer.o)  $(TEMPLIB)(ftn_prog_args.o)  $(TEMPLIB)(crc16_.o)          $(TEMPLIB)(crc24_.o)\
-         $(TEMPLIB)(crc32_.o)          $(TEMPLIB)(crc_16_24_32.o)   $(TEMPLIB)(dlfcn.o)           $(TEMPLIB)(DlInterface.o)\
-         $(TEMPLIB)(register_dl_routines.o) $(TEMPLIB)(msg.o)       $(TEMPLIB)(new_second.o)      $(TEMPLIB)(cpu_type.o)\
-         $(TEMPLIB)(get_endian.o)      $(TEMPLIB)(plugin_code.o)
+locallib: gen_ec_arch_dir $(TEMPLIB)(c_baseio.o) $(TEMPLIB)(f_baseio.o) $(TEMPLIB)(prog_filename.o) $(TEMPLIB)(rah2char.o) $(TEMPLIB)(tracebck.o) $(TEMPLIB)(qqexit.o) $(TEMPLIB)(up2low.o) $(TEMPLIB)(ieeepak.o) $(TEMPLIB)(wkoffit.o) $(TEMPLIB)(c_env_var_cracker.o) $(TEMPLIB)(getenvc.o) $(TEMPLIB)(pointers_and_addresses.o) $(TEMPLIB)(fread32.o) $(TEMPLIB)(msg.o) $(TEMPLIB)(crc32.o)
+#locallib: gen_ec_arch_dir \
+#         $(TEMPLIB)(c_baseio.o)        $(TEMPLIB)(c_ccard.o)        $(TEMPLIB)(constnt.o)         $(TEMPLIB)(dmms.o) \
+#         $(TEMPLIB)(exdb.o)            $(TEMPLIB)(fread32.o) \
+#         $(TEMPLIB)(getenvc.o)         $(TEMPLIB)(ieeepak.o)        $(TEMPLIB)(iopdatm.o) \
+#         $(TEMPLIB)(loc_sub.o)         $(TEMPLIB)(nice19.o) \
+#         $(TEMPLIB)(peek.o)            $(TEMPLIB)(poke.o)           $(TEMPLIB)(qqexit.o)          $(TEMPLIB)(qqqmima.o) \
+#         $(TEMPLIB)(read_direct.o)     $(TEMPLIB)(resetenv.o)       $(TEMPLIB)(rmnlib_version.o)  $(TEMPLIB)(rmtcall.o) \
+#         $(TEMPLIB)(second.o)          $(TEMPLIB)(set_run_dir.o)    $(TEMPLIB)(stkmem.o) \
+#         $(TEMPLIB)(sx_timing_stubs.o) $(TEMPLIB)(tracebck.o)       $(TEMPLIB)(up2low.o)          $(TEMPLIB)(vmm.o) \
+#         $(TEMPLIB)(wkoffit.o)         $(TEMPLIB)(f_baseio.o)       $(TEMPLIB)(qqqcall.o)         $(TEMPLIB)(qqqr8sz.o)\
+#         $(TEMPLIB)(ccard.o)           $(TEMPLIB)(qvmcks.o)         $(TEMPLIB)(rah2char.o)        $(TEMPLIB)(fmain2cmain.o)\
+#         $(TEMPLIB)(calc_crc.o)        $(TEMPLIB)(ibm32_ieee.o)     $(TEMPLIB)(second2.o)         $(TEMPLIB)(status_file.o)\
+#         $(TEMPLIB)(stkmem2.o)         $(TEMPLIB)(prog_filename.o)  $(TEMPLIB)(rename_c.o)        \
+#         $(TEMPLIB)(remove_c.o)        $(TEMPLIB)(gossip_sock.o)    $(TEMPLIB)(gossip_timeout.o)  $(TEMPLIB)(gnthread.o)\
+#         $(TEMPLIB)(f90_threads.o)     $(TEMPLIB)(c_env_var_cracker.o) $(TEMPLIB)(get_max_rss.o)  $(TEMPLIB)(resident_time.o)\
+#         $(TEMPLIB)(appl_var.o)        $(TEMPLIB)(get_ccard_arg.o)  $(TEMPLIB)(ccard_arg_m.o)     $(TEMPLIB)(crc32.o)\
+#         $(TEMPLIB)(f_gettimeofday.o)  $(TEMPLIB)(f_bit_slicer.o)   $(TEMPLIB)(gossip_thread.o)   $(TEMPLIB)(flush_stdout.o)\
+#         $(TEMPLIB)(array_file.o)      $(TEMPLIB)(logical_smt_cpus.o)  $(TEMPLIB)(pointers_and_addresses.o)\
+#         $(TEMPLIB)(mkdir_c.o)         $(TEMPLIB)(non_preempt_clock.o) $(TEMPLIB)(client_timeout.o) $(TEMPLIB)(vpow_ibm.o)\
+#         $(TEMPLIB)(ftn2c_helper_c.o)  $(TEMPLIB)(clib_interface.o) $(TEMPLIB)(ftn2c_helper_f.o)\
+#         $(TEMPLIB)(arc4.o)            $(TEMPLIB)(md5.o)            $(TEMPLIB)(f_logical2int.o)\
+#         $(TEMPLIB)(fool_optimizer.o)  $(TEMPLIB)(ftn_prog_args.o)  $(TEMPLIB)(crc16_.o)          $(TEMPLIB)(crc24_.o)\
+#         $(TEMPLIB)(crc32_.o)          $(TEMPLIB)(crc_16_24_32.o)   $(TEMPLIB)(dlfcn.o)           $(TEMPLIB)(DlInterface.o)\
+#         $(TEMPLIB)(register_dl_routines.o) $(TEMPLIB)(msg.o)       $(TEMPLIB)(new_second.o)      $(TEMPLIB)(cpu_type.o)\
+#         $(TEMPLIB)(get_endian.o)      $(TEMPLIB)(plugin_code.o)
 
 genlib: rmnlib_v $(OBJECTS)
 #Creer ou mettre a jour la programmatheque 
diff --git a/primitives/c_baseio.c b/primitives/c_baseio.c
index 657504e..ed80375 100644
--- a/primitives/c_baseio.c
+++ b/primitives/c_baseio.c
@@ -31,7 +31,6 @@
 #ifdef WIN32    /*CHC/NRC*/
 #include <stdio.h>
 #include <sys/stat.h>
-#include <Winsock2.h>
 #define L_SET SEEK_SET
 #define L_INCR SEEK_CUR
 #define L_XTND SEEK_END
@@ -99,7 +98,6 @@ static void qqcward(word *buf,unsigned int ladr,int  lnmots,int indf);
 static INT_32 qqcnblk(int lfd,int indf);
 static void MOVE (word *src, word *dest, int nwords);
 static void ZERO ( word *dest, int nwords);
-static int fnom_rem_connect(int ind, char* remote_host);
 
 
 static ENTETE_CMCARC cmcarc;
@@ -614,7 +612,7 @@ int c_fnom(int *iun,char *nom,char *type,int lrec)
      FGFDT[i].attr.wa = 0;   /* will be set by waopen */
   }
   
-  if (FGFDT[i].attr.remote) ier = fnom_rem_connect(i,remote_mach);
+  if (FGFDT[i].attr.remote) ier = -1;
     
   if (ier == 0) FGFDT[i].open_flag = 1;
   if (ier < 0) junk=c_fclos(liun);
@@ -805,31 +803,6 @@ static int qqcclos(int indf)
      }
      
   if (FGFDT[indf].attr.remote) {
-    int *s_ID, *addr, *nw, *RW_mode, *checksum;
-    int sock_comm_ID=0xBABE;
-    int demande[5];
-    int nc;
-
-    s_ID = &(demande[0]);
-    addr = &(demande[1]);
-    nw = &(demande[2]);
-    RW_mode = &(demande[3]);
-    checksum = &(demande[4]);
-    *s_ID = sock_comm_ID;
-    *addr = 0;
-    *nw = 0;
-    *RW_mode = 3;  /* close request */
-    *checksum = *s_ID ^ *addr ^ *nw ^ *RW_mode;
-    check_swap_records(demande,5,sizeof(int));
-    nc=write_stream(FGFDT[indf].fd,demande,5*sizeof(int));
-    if (nc == 0) {
-      printf("socket qqcclos wrote to server OK\n");
-      fflush(stdout);
-      }
-    else {
-      fprintf(stderr,"socket qqcclos error: wrote only %d bytes to server\n",nc);
-      fflush(stderr);
-      }
   } /* end remote */
 	else {
     if (WA_PAGE_SIZE != 0) {
@@ -2556,35 +2529,6 @@ if (FGFDT[indf].attr.read_only) {
   }
   
 if (FGFDT[indf].attr.remote) {
-  int *s_ID, *addr, *nw, *RW_mode, *checksum;
-  int sock_comm_ID=0xBABE;
-  int demande[5];
-  int nc, nelm;
-
-  s_ID = &(demande[0]);
-  addr = &(demande[1]);
-  nw = &(demande[2]);
-  RW_mode = &(demande[3]);
-  checksum = &(demande[4]);
-  *s_ID = sock_comm_ID;
-  *addr = ladr;
-  *nw = lnmots;
-  *RW_mode = 2;  /* write request */
-  *checksum = *s_ID ^ *addr ^ *nw ^ *RW_mode;
-  check_swap_records(demande,5,sizeof(int));
-  nc=write_stream(FGFDT[indf].fd,demande,5*sizeof(int));
-  if (nc != 0) {
-    fprintf(stderr,"socket qqcwawr error: wrote only %i bytes to server\n",nc);
-    fflush(stderr);
-    }
-  nelm=write_stream(FGFDT[indf].fd,buf,lnmots*sizeof(int));
-#if defined (DEBUG)  
-  if (nelm == 0) printf("socket qqcwawr wrote %d bytes\n",lnmots*sizeof(int));
-#endif
-  if (ladr+lnmots-1 > FGFDT[indf].file_size) {
-    FGFDT[indf].file_size = ladr+lnmots-1;
-    FGFDT[indf].eff_file_size = ladr+lnmots-1;
-    }
 } /* end remote */
 else {
   
@@ -2685,31 +2629,6 @@ if (ind == MAXWAFILES) {
   exit(1);
   }
 if (FGFDT[indf].attr.remote) {
-  int *s_ID, *addr, *nw, *RW_mode, *checksum;
-  int sock_comm_ID=0xBABE;
-  int demande[5];
-  int nc, nelm;
-
-  s_ID = &(demande[0]);
-  addr = &(demande[1]);
-  nw = &(demande[2]);
-  RW_mode = &(demande[3]);
-  checksum = &(demande[4]);
-  *s_ID = sock_comm_ID;
-  *addr = ladr;
-  *nw = lnmots;
-  *RW_mode = 1;  /* read request */
-  *checksum = *s_ID ^ *addr ^ *nw ^ *RW_mode;
-  check_swap_records(demande,5,sizeof(int));
-  nc=write_stream(FGFDT[indf].fd,demande,5*sizeof(int));
-  if (nc != 0) {
-    fprintf(stderr,"socket qqcward error: wrote only %d bytes to server\n",nc);
-    fflush(stderr);
-    }
-  nelm=read_stream(FGFDT[indf].fd,buf,lnmots*sizeof(int));
-#if defined (DEBUG)
-  printf("qqcward read %d bytes\n",nelm);
-#endif
 } /* end remote */
 else {
   if (ladr != 0) 
@@ -2748,170 +2667,6 @@ else {
   } /* end else */
 } /* end else */
 }
-/****************************************************************************
-*                              fnom_rem_connect                             *
-*****************************************************************************
-*
-***function fnom_rem_connect
-*
-*OBJECT: Establish socket connection with host server
-*
-*ARGUMENTS: in remote_host remote host server name
-*           in ind         file index in fnom general file table index
-*           
-*Revisions
-*           nov 2009 - Utilisation de ssh dans tous les cas pour demarrer wa_server
-*           fev 2011 - Utilisation de system(r.remote_wa_server) au lieu de popen
-*
-*/
-int fnom_rem_connect(int ind, char* remote_host)
-{
-  char buf[1024];
-  char cbuf[1024];
-  char pbuf[1024];
-  char remote_command[1024];
-  int wa_buf_lu[10];
-  int fserver;
-  int fclient=-1;
-  int server_port = -1;
-  FILE *comm = NULL, *file_ptr=NULL;
-  fd_set rfds;
-  fd_set wfds;
-  fd_set efds;
-  struct timeval tv;
-  int nc, i, indx, isel, ier;
-  int *s_ID, *addr, *nw, *RW_mode, *checksum, new_checksum;
-  int sock_comm_ID=0xBABE;
-  int demande[5];
-  
-  fserver = bind_to_localport(&server_port, cbuf, sizeof(cbuf)-1);
-  listen(fserver,5);
-  printf("bound to #%s#\n", cbuf);
-  fflush(stdout);
-
-/*
-  file_ptr = fopen("ECssm/all/bin/remote_exec.sh","r");
-
-  if (file_ptr != NULL) {
-    printf("Debug+ passe par remote_exec\n");
-    snprintf(pbuf,sizeof(pbuf)-1,"ssh %s -n %s %s %s @%s ",remote_host,"ECssm/all/bin/remote_exec.sh wa_server",
-           FGFDT[ind].file_name,(FGFDT[ind].attr.read_only == 1) ? "R/O" : "R/W",cbuf);
-    printf("Debug+ commande passee =\n%s\n",pbuf);
-    }
-  else {
-    snprintf(pbuf,sizeof(pbuf)-1,"ssh %s -n %s/bin/%s %s %s @%s ",remote_host,armnlibpath,"wa_server",
-           FGFDT[ind].file_name,(FGFDT[ind].attr.read_only == 1) ? "R/O" : "R/W",cbuf);
-    printf("Debug+ ancienne commande passee =\n%s\n",pbuf);
-    }
-*/
-/*
-  snprintf(pbuf,sizeof(pbuf)-1,"rsh %s -n %s %s %s @%s ",remote_host,"/users/dor/armn/mlp/tests/SOCKETS/wa_server",
-           FGFDT[ind].file_name,(FGFDT[ind].attr.read_only == 1) ? "R/O" : "R/W",cbuf);
-*/
-                            /*  rsh host -n commande fichier mode socket */
-  snprintf(pbuf,sizeof(pbuf)-1,"echo wa_server %s %s @%s | ssh %s 'bash --login 1>/dev/null 2>/dev/null'",
-           FGFDT[ind].file_name,(FGFDT[ind].attr.read_only == 1) ? "R/O" : "R/W",cbuf,remote_host);
-
-/*  comm = popen(pbuf,"r"); */
-/*  ier = system(pbuf); */
-  
-  snprintf(remote_command,sizeof(remote_command)-1,"r.remote_wa_server %s %s %s %s",
-	  FGFDT[ind].file_name,(FGFDT[ind].attr.read_only == 1) ? "R/O" : "R/W",cbuf,remote_host);
-  printf("Debug+ commande passee =\n%s\n",remote_command);
-  ier = system(remote_command);
-/*  printf("Debug+ ier de remote_command =%d\n",ier); */
-/*  
-  if(comm == NULL) {
-    printf("fnom_rem_connect error: popen error !!\n");
-    return(-1);
-  }else{
-    int nelm;
-    buf[0] = '\0';
-    nelm = fread(buf, 1, sizeof(buf)-1, comm);
-    if(nelm > 0) buf[nelm] ='\0';
-    pclose(comm);
-    printf("read %d bytes, ::%s::\n", nelm, buf);
-  }
-*/
-
-  fflush(stdout);
-  FD_ZERO(&rfds);
-  FD_SET(fserver, &rfds);
-  tv.tv_sec = 5;
-  tv.tv_usec = 0;
-  isel = select(fserver+1, &rfds, NULL, NULL, &tv);
-  /* if (select(fserver+1, &rfds, NULL, NULL, &tv)) */
-/*  printf("Debug+ retour de select=%d\n",isel); */
-  if (isel)
-  {
-    fclient = accept_from_sock(fserver);
-    printf("connected to server\n");
-    fflush(stdout);
-    FGFDT[ind].fd = -1;
-    indx = 0;
-    while ((wafile[indx].file_desc != -1) && (indx < MAXWAFILES))
-      indx++;
-    if (indx == MAXWAFILES) {
-      fprintf(stderr, "fnom_rem_connect error: too many open files\n");
-      return(-1);
-    }
-   
-    s_ID = &(demande[0]);
-    addr = &(demande[1]);
-    nw = &(demande[2]);
-    RW_mode = &(demande[3]);
-    checksum = &(demande[4]);
-    *s_ID = sock_comm_ID;
-    *addr = 0;
-    *nw = 0;
-    *RW_mode = 4;  /* wasize request */
-    *checksum = *s_ID ^ *addr ^ *RW_mode;
-    check_swap_records(demande, 5, sizeof(int));
-    nc = write_stream(fclient, demande, 5*sizeof(int));
-
-    if (nc == 0) {
-      printf("fnom_rem_connect wrote to server OK\n");
-      fflush(stdout);
-      }
-    else {
-      fprintf(stderr, "fnom_rem_connect error: wrote only %d bytes to server\n", nc);
-      fflush(stderr);
-      close(fclient);
-      return(-1);
-      }
-
-    demande[0] = 0; demande[1] = 0; demande[2] = 0; demande[3] = 0; demande[4] = 0;
-    nc = read_stream(fclient, demande, 5*sizeof(int));
-    if (nc !=  5*sizeof(int)) {
-      fprintf(stderr, "fnom_rem_connect error: read only %d bytes from server\n", nc);
-      fflush(stderr);
-      close(fclient);
-      return(-1);
-      }
-
-    check_swap_records(demande, 5, sizeof(int));
-    new_checksum = *s_ID ^ *addr ^ *RW_mode;
-    if (new_checksum != *checksum) {
-      fprintf(stderr,"fnom_rem_connect error: invalid checksum=%X not %X\n",new_checksum,checksum);
-      fflush(stderr);
-      close(fclient);
-      return(-1);
-      }
-      printf("Debug+ fnom_rem_connect wasize=%d\n",*nw);
-      fflush(stdout);
-    FGFDT[ind].file_size = *nw;
-    FGFDT[ind].eff_file_size = *nw;
-  }
-  else {
-    fprintf(stderr,"fnom_rem_connect error: cannot connect to server\n");
-    return(-1);
-  }
-
-  wafile[indx].file_desc = fclient;
-  FGFDT[ind].fd = fclient;
-  FGFDT[ind].open_flag = 1;
-  return(0);
-}
 
 /****************************************************************************
 *                                  MOVE                                     *
diff --git a/primitives/c_env_var_cracker.c b/primitives/c_env_var_cracker.c
index 322cc51..8aeb244 100644
--- a/primitives/c_env_var_cracker.c
+++ b/primitives/c_env_var_cracker.c
@@ -1,7 +1,6 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <pwd.h>
 #include <rpnmacros.h>
 
 #define null 0
