diff --git a/lib/rpnpy/librmn/__init__.py b/lib/rpnpy/librmn/__init__.py
index 6255e40..097217f 100755
--- a/lib/rpnpy/librmn/__init__.py
+++ b/lib/rpnpy/librmn/__init__.py
@@ -75,19 +75,24 @@ def loadRMNlib(rmn_version=None):
     ## import numpy  as np
     ## import numpy.ctypeslib as npct
 
+    # For windows, need to change the current directory to see the .dll files.
+    curdir = os.path.realpath(os.getcwd())
+    os.chdir(os.path.join(os.path.dirname(__file__),os.pardir,'_sharedlibs'))
+
     if rmn_version is None:
         RMN_VERSION = os.getenv('RPNPY_RMN_VERSION',
                                 RMN_VERSION_DEFAULT).strip()
     else:
         RMN_VERSION = rmn_version
-    rmn_libfile = 'librmnshared' + RMN_VERSION.strip() + '.so'
+    rmn_libfile = 'librmnshared' + RMN_VERSION.strip() + '.*'
 
+    localpath   = [os.path.realpath(os.getcwd())]
     pylibpath   = os.getenv('PYTHONPATH','').split(':')
     ldlibpath   = os.getenv('LD_LIBRARY_PATH','').split(':')
     eclibpath   = os.getenv('EC_LD_LIBRARY_PATH','').split()
     RMN_LIBPATH = checkRMNlibPath(rmn_libfile)
     if not RMN_LIBPATH:
-        for path in pylibpath + ldlibpath + eclibpath:
+        for path in localpath + pylibpath + ldlibpath + eclibpath:
             RMN_LIBPATH = checkRMNlibPath(os.path.join(path.strip(), rmn_libfile))
             if RMN_LIBPATH:
                 break
@@ -95,6 +100,7 @@ def loadRMNlib(rmn_version=None):
     if not RMN_LIBPATH:
         raise IOError(-1, 'Failed to find librmn.so: ', rmn_libfile)
 
+    RMN_LIBPATH = os.path.abspath(RMN_LIBPATH)
     librmn = None
     try:
         librmn = ct.cdll.LoadLibrary(RMN_LIBPATH)
@@ -102,6 +108,7 @@ def loadRMNlib(rmn_version=None):
     except IOError as e:
         raise IOError('ERROR: cannot load librmn shared version: ' +
                       RMN_VERSION, e)
+    os.chdir(curdir)
     return (RMN_VERSION, RMN_LIBPATH, librmn)
 
 (RMN_VERSION, RMN_LIBPATH, librmn) = loadRMNlib()
diff --git a/lib/rpnpy/vgd/__init__.py b/lib/rpnpy/vgd/__init__.py
index 981041f..962f796 100755
--- a/lib/rpnpy/vgd/__init__.py
+++ b/lib/rpnpy/vgd/__init__.py
@@ -78,19 +78,24 @@ def loadVGDlib(vgd_version=None):
     ## import numpy  as np
     ## import numpy.ctypeslib as npct
 
+    # For windows, need to change the current directory to see the .dll files.
+    curdir = os.path.realpath(os.getcwd())
+    os.chdir(os.path.join(os.path.dirname(__file__),os.pardir,'_sharedlibs'))
+
     if vgd_version is None:
         VGD_VERSION = os.getenv('RPNPY_VGD_VERSION',
                                 VGD_VERSION_DEFAULT).strip()
     else:
         VGD_VERSION = vgd_version
-    vgd_libfile = 'libdescripshared' + VGD_VERSION.strip() + '.so'
+    vgd_libfile = 'libdescripshared' + VGD_VERSION.strip() + '.*'
 
+    localpath   = [os.path.realpath(os.getcwd())]
     pylibpath   = os.getenv('PYTHONPATH','').split(':')
     ldlibpath   = os.getenv('LD_LIBRARY_PATH','').split(':')
     eclibpath   = os.getenv('EC_LD_LIBRARY_PATH','').split()
     VGD_LIBPATH = checkVGDlibPath(vgd_libfile)
     if not VGD_LIBPATH:
-        for path in pylibpath + ldlibpath + eclibpath:
+        for path in localpath + pylibpath + ldlibpath + eclibpath:
             VGD_LIBPATH = checkVGDlibPath(os.path.join(path.strip(), vgd_libfile))
             if VGD_LIBPATH:
                 break
@@ -106,6 +111,8 @@ def loadVGDlib(vgd_version=None):
     except IOError:
         raise IOError('ERROR: cannot load libdescrip shared version: ' +
                       VGD_VERSION)
+
+    os.chdir(curdir)
     return (VGD_VERSION, VGD_LIBPATH, libvgd)
 
 (VGD_VERSION, VGD_LIBPATH, libvgd) = loadVGDlib()
